### YamlMime:PythonClass
uid: azure.ai.ml.operations.WorkspaceOperations
name: WorkspaceOperations
fullName: azure.ai.ml.operations.WorkspaceOperations
module: azure.ai.ml.operations
inheritances:
- azure.ai.ml.operations._workspace_operations_base.WorkspaceOperationsBase
summary: 'WorkspaceOperations.


  You should not instantiate this class directly. Instead, you should create an MLClient
  instance that instantiates it

  for you and attaches it as an attribute.'
constructor:
  syntax: 'WorkspaceOperations(operation_scope: OperationScope, service_client: AzureMachineLearningWorkspaces,
    all_operations: OperationsContainer, credentials: TokenCredential | None = None,
    **kwargs: Dict)'
  parameters:
  - name: operation_scope
    isRequired: true
  - name: service_client
    isRequired: true
  - name: all_operations
    isRequired: true
  - name: credentials
    defaultValue: None
methods:
- uid: azure.ai.ml.operations.WorkspaceOperations.begin_create
  name: begin_create
  summary: 'Create a new Azure Machine Learning Workspace.


    Returns the workspace if already exists.'
  signature: 'begin_create(workspace: Workspace, update_dependent_resources: bool
    = False, **kwargs: Dict) -> LROPoller[Workspace]'
  parameters:
  - name: workspace
    description: Workspace definition.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.Workspace>
  - name: update_dependent_resources
    description: Whether to update dependent resources
    isRequired: true
    types:
    - <xref:boolean>
  return:
    description: An instance of LROPoller that returns a Workspace.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.ml.entities.Workspace>]
- uid: azure.ai.ml.operations.WorkspaceOperations.begin_delete
  name: begin_delete
  summary: Delete a workspace.
  signature: 'begin_delete(name: str, *, delete_dependent_resources: bool, permanently_delete:
    bool = False, **kwargs: Dict) -> LROPoller[None]'
  parameters:
  - name: name
    description: Name of the workspace
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: delete_dependent_resources
    description: 'Whether to delete resources associated with the workspace,

      i.e., container registry, storage account, key vault, and application insights.

      The default is False. Set to True to delete these resources.'
    types:
    - <xref:bool>
  - name: permanently_delete
    description: 'Workspaces are soft-deleted by default to allow recovery of workspace
      data.

      Set this flag to true to override the soft-delete behavior and permanently delete
      your workspace.'
    types:
    - <xref:bool>
  return:
    description: A poller to track the operation status.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
- uid: azure.ai.ml.operations.WorkspaceOperations.begin_diagnose
  name: begin_diagnose
  summary: 'Diagnose workspace setup problems.


    If your workspace is not working as expected, you can run this diagnosis to

    check if the workspace has been broken.

    For private endpoint workspace, it will also help check out if the network

    setup to this workspace and its dependent resource as problem or not.'
  signature: 'begin_diagnose(name: str, **kwargs: Dict) -> LROPoller[DiagnoseResponseResultValue]'
  parameters:
  - name: name
    description: Name of the workspace
    isRequired: true
    types:
    - <xref:str>
  return:
    description: A poller to track the operation status.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.ml.entities.DiagnoseResponseResultValue>]
- uid: azure.ai.ml.operations.WorkspaceOperations.begin_provision_network
  name: begin_provision_network
  summary: 'Triggers the workspace to provision the managed network. Specifying spark
    enabled

    as true prepares the workspace managed network for supporting Spark.'
  signature: 'begin_provision_network(*, workspace_name: str | None = None, include_spark:
    bool = False, **kwargs) -> LROPoller[ManagedNetworkProvisionStatus]'
  keywordOnlyParameters:
  - name: workspace_name
    description: Name of the workspace.
    types:
    - <xref:str>
  - name: include_spark
    description: Whether the workspace managed network should prepare to support Spark.
  return:
    description: An instance of LROPoller.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.ml.entities.ManagedNetworkProvisionStatus>]
- uid: azure.ai.ml.operations.WorkspaceOperations.begin_sync_keys
  name: begin_sync_keys
  summary: 'Triggers the workspace to immediately synchronize keys. If keys for any
    resource in the workspace are

    changed, it can take around an hour for them to automatically be updated. This
    function enables keys to be

    updated upon request. An example scenario is needing immediate access to storage
    after regenerating storage

    keys.'
  signature: 'begin_sync_keys(name: str | None = None) -> LROPoller'
  parameters:
  - name: name
    description: Name of the workspace.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: An instance of LROPoller that returns either None or the sync keys
      result.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
- uid: azure.ai.ml.operations.WorkspaceOperations.begin_update
  name: begin_update
  signature: 'begin_update(workspace: Workspace, *, update_dependent_resources: bool
    = False, **kwargs: Dict) -> LROPoller[Workspace]'
- uid: azure.ai.ml.operations.WorkspaceOperations.get
  name: get
  summary: Get a workspace by name.
  signature: 'get(name: str | None = None, **kwargs: Dict) -> Workspace'
  parameters:
  - name: name
    description: Name of the workspace.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The workspace with the provided name.
    types:
    - <xref:azure.ai.ml.entities.Workspace>
- uid: azure.ai.ml.operations.WorkspaceOperations.get_keys
  name: get_keys
  summary: Get keys for the workspace.
  signature: 'get_keys(name: str | None = None) -> WorkspaceKeys'
  parameters:
  - name: name
    description: Name of the workspace.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Keys of workspace dependent resources.
    types:
    - <xref:azure.ai.ml.entities.WorkspaceKeys>
- uid: azure.ai.ml.operations.WorkspaceOperations.list
  name: list
  summary: List all workspaces that the user has access to in the current resource
    group or subscription.
  signature: 'list(*, scope: str = ''resource_group'') -> Iterable[Workspace]'
  keywordOnlyParameters:
  - name: scope
    description: scope of the listing, "resource_group" or "subscription", defaults
      to "resource_group"
    types:
    - <xref:str>
  return:
    description: An iterator like instance of Workspace objects
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.ml.entities.Workspace>]
