### YamlMime:PythonClass
uid: azure.mgmt.hybridcompute.aio.operations.LicensesOperations
name: LicensesOperations
fullName: azure.mgmt.hybridcompute.aio.operations.LicensesOperations
module: azure.mgmt.hybridcompute.aio.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.hybridcompute.aio.HybridComputeManagementClient>'s\n\
  >\n> <xref:licenses> attribute.\n>"
constructor:
  syntax: LicensesOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.hybridcompute.aio.operations.LicensesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: The operation to create or update a license.
  signature: 'async begin_create_or_update(resource_group_name: str, license_name:
    str, parameters: _models.License, *, content_type: str = ''application/json'',
    **kwargs: Any) -> AsyncLROPoller[_models.License]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: license_name
    description: The name of the license. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters supplied to the Create license operation. Is either a
      License

      type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.hybridcompute.models.License>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either License or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.hybridcompute.models.License>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.hybridcompute.aio.operations.LicensesOperations.begin_delete
  name: begin_delete
  summary: The operation to delete a license.
  signature: 'async begin_delete(resource_group_name: str, license_name: str, **kwargs:
    Any) -> AsyncLROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: license_name
    description: The name of the license. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of AsyncLROPoller that returns either None or the result
      of cls(response)
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.hybridcompute.aio.operations.LicensesOperations.begin_update
  name: begin_update
  summary: The operation to update a license.
  signature: 'async begin_update(resource_group_name: str, license_name: str, parameters:
    _models.LicenseUpdate, *, content_type: str = ''application/json'', **kwargs:
    Any) -> AsyncLROPoller[_models.License]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: license_name
    description: The name of the license. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'Parameters supplied to the Update license operation. Is either a

      LicenseUpdate type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.hybridcompute.models.LicenseUpdate>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either License or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.hybridcompute.models.License>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.hybridcompute.aio.operations.LicensesOperations.begin_validate_license
  name: begin_validate_license
  summary: The operation to validate a license.
  signature: 'async begin_validate_license(parameters: _models.License, *, content_type:
    str = ''application/json'', **kwargs: Any) -> AsyncLROPoller[_models.License]'
  parameters:
  - name: parameters
    description: 'Parameters supplied to the license validation operation. Is either
      a License

      type or a IO type. Required.'
    isRequired: true
    types:
    - <xref:azure.mgmt.hybridcompute.models.License>
    - <xref:typing.IO>
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be AsyncARMPolling. Pass in
      False for

      this operation to not poll, or pass in your own initialized polling object for
      a personal

      polling strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.AsyncPollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of AsyncLROPoller that returns either License or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.mgmt.hybridcompute.models.License>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.hybridcompute.aio.operations.LicensesOperations.get
  name: get
  summary: Retrieves information about the view of a license.
  signature: 'async get(resource_group_name: str, license_name: str, **kwargs: Any)
    -> License'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: license_name
    description: The name of the license. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: License or the result of cls(response)
    types:
    - <xref:azure.mgmt.hybridcompute.models.License>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.hybridcompute.aio.operations.LicensesOperations.list_by_resource_group
  name: list_by_resource_group
  summary: The operation to get all licenses of a non-Azure machine.
  signature: 'list_by_resource_group(resource_group_name: str, **kwargs: Any) -> AsyncIterable[License]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group. The name is case insensitive.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either License or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.hybridcompute.models.License>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.hybridcompute.aio.operations.LicensesOperations.list_by_subscription
  name: list_by_subscription
  summary: The operation to get all licenses of a non-Azure machine.
  signature: 'list_by_subscription(**kwargs: Any) -> AsyncIterable[License]'
  keywordOnlyParameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either License or the result of cls(response)
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.mgmt.hybridcompute.models.License>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.hybridcompute.aio.operations.LicensesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.hybridcompute.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.7\\x64\\Lib\\site-packages\\azure\\mgmt\\hybridcompute\\models\\__init__.py'>
