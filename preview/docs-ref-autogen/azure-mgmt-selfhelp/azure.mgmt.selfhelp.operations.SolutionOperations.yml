### YamlMime:PythonClass
uid: azure.mgmt.selfhelp.operations.SolutionOperations
name: SolutionOperations
fullName: azure.mgmt.selfhelp.operations.SolutionOperations
module: azure.mgmt.selfhelp.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.selfhelp.SelfHelpMgmtClient>'s\n\
  >\n> <xref:solution> attribute.\n>"
constructor:
  syntax: SolutionOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.selfhelp.operations.SolutionOperations.begin_create
  name: begin_create
  summary: 'Creates a solution for the specific Azure resource or subscription using
    the triggering

    criteria ''solutionId and requiredInputs'' from discovery solutions.:code:*<br/>*
    Solutions are a

    rich, insightful and a centralized self help experience that brings all the relevant
    content to

    troubleshoot an Azure issue into a unified experience. Solutions include the following

    components : Text, Diagnostics , Troubleshooters, Images , Video tutorials, Tables
    , custom

    charts, images , AzureKB, etc, with capabilities to support new solutions types
    in the future.

    Each solution type may require one or more ''requiredParameters'' that are required
    to execute

    the individual solution component. In the absence of the ''requiredParameters''
    it is likely that

    some of the solutions might fail execution, and you might see an empty response.

    `<br/>``<br/>` `<b>Note:</b>`  :code:>>`<<<br/>`1. ''requiredInputs'' from

    Discovery solutions response must be passed via ''parameters'' in the request
    body of Solutions

    API. :code:>>`<<<br/>`2. ''requiredParameters'' from the Solutions response is
    the same as ''

    additionalParameters'' in the request for diagnostics :code:>>`<<<br/>`3. ''requiredParameters''
    from

    the Solutions response is the same as ''properties.parameters'' in the request
    for

    Troubleshooters.'
  signature: 'begin_create(scope: str, solution_resource_name: str, solution_request_body:
    _models.SolutionResource | None = None, *, content_type: str = ''application/json'',
    **kwargs: Any) -> LROPoller[_models.SolutionResource]'
  parameters:
  - name: scope
    description: 'This is an extension resource provider and only resource level extension
      is

      supported at the moment. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: solution_resource_name
    description: Solution resource Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: solution_request_body
    description: 'The required request body for this solution resource creation. Is

      either a SolutionResource type or a IO type. Default value is None.'
    isRequired: true
    types:
    - <xref:azure.mgmt.selfhelp.models.SolutionResource>
    - <xref:typing.IO>
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of LROPoller that returns either SolutionResource or
      the result of

      cls(response)'
    types:
    - <xref:LROPoller>[<xref:azure.mgmt.selfhelp.models.SolutionResource>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.selfhelp.operations.SolutionOperations.begin_update
  name: begin_update
  summary: Update the requiredInputs or additional information needed to execute the
    solution.
  signature: 'begin_update(scope: str, solution_resource_name: str, solution_patch_request_body:
    _models.SolutionPatchRequestBody | None = None, *, content_type: str = ''application/json'',
    **kwargs: Any) -> LROPoller[_models.SolutionResource]'
  parameters:
  - name: scope
    description: 'This is an extension resource provider and only resource level extension
      is

      supported at the moment. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: solution_resource_name
    description: Solution resource Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: solution_patch_request_body
    description: 'The required request body for updating a solution resource.

      Is either a SolutionPatchRequestBody type or a IO type. Default value is None.'
    isRequired: true
    types:
    - <xref:azure.mgmt.selfhelp.models.SolutionPatchRequestBody>
    - <xref:typing.IO>
  - name: content_type
    description: 'Body Parameter content-type. Known values are: ''application/json''.

      Default value is None.'
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of LROPoller that returns either SolutionResource or
      the result of

      cls(response)'
    types:
    - <xref:LROPoller>[<xref:azure.mgmt.selfhelp.models.SolutionResource>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.selfhelp.operations.SolutionOperations.get
  name: get
  summary: Get the solution using the applicable solutionResourceName while creating
    the solution.
  signature: 'get(scope: str, solution_resource_name: str, **kwargs: Any) -> SolutionResource'
  parameters:
  - name: scope
    description: 'This is an extension resource provider and only resource level extension
      is

      supported at the moment. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: solution_resource_name
    description: Solution resource Name. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: SolutionResource or the result of cls(response)
    types:
    - <xref:azure.mgmt.selfhelp.models.SolutionResource>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.selfhelp.operations.SolutionOperations.models
  name: models
  signature: models = <module 'azure.mgmt.selfhelp.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.11.6\\x64\\Lib\\site-packages\\azure\\mgmt\\selfhelp\\models\\__init__.py'>
