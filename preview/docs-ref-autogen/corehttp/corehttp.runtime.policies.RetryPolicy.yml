### YamlMime:PythonClass
uid: corehttp.runtime.policies.RetryPolicy
name: RetryPolicy
fullName: corehttp.runtime.policies.RetryPolicy
module: corehttp.runtime.policies
inheritances:
- corehttp.runtime.policies._retry.RetryPolicyBase
- corehttp.runtime.policies._base.HTTPPolicy
summary: 'A retry policy.


  The retry policy in the pipeline can be configured directly, or tweaked on a per-call
  basis.'
constructor:
  syntax: 'RetryPolicy(**kwargs: Any)'
  parameters:
  - name: retry_total
    description: 'Total number of retries to allow. Takes precedence over other counts.

      Default value is 10.'
    types:
    - <xref:int>
  - name: retry_connect
    description: 'How many connection-related errors to retry on.

      These are errors raised before the request is sent to the remote server,

      which we assume has not triggered the server to process the request. Default
      value is 3.'
    types:
    - <xref:int>
  - name: retry_read
    description: 'How many times to retry on read errors.

      These errors are raised after the request was sent to the server, so the

      request may have side-effects. Default value is 3.'
    types:
    - <xref:int>
  - name: retry_status
    description: How many times to retry on bad status codes. Default value is 3.
    types:
    - <xref:int>
  - name: retry_backoff_factor
    description: 'A backoff factor to apply between attempts after the second try

      (most errors are resolved immediately by a second try without a delay).

      In fixed mode, retry policy will always sleep for {backoff factor}.

      In ''exponential'' mode, retry policy will sleep for: *{backoff factor} * (2
      ** ({number of total retries} - 1))*

      seconds. If the backoff_factor is 0.1, then the retry will sleep

      for [0.0s, 0.2s, 0.4s, ...] between retries. The default value is 0.8.'
    types:
    - <xref:float>
  - name: retry_backoff_max
    description: The maximum back off time. Default value is 120 seconds (2 minutes).
    types:
    - <xref:int>
  - name: retry_mode
    description: Fixed or exponential delay between attemps, default is exponential.
    types:
    - <xref:corehttp.runtime.policies.RetryMode>
  - name: timeout
    description: Timeout setting for the operation in seconds, default is 604800s
      (7 days).
    types:
    - <xref:int>
methods:
- uid: corehttp.runtime.policies.RetryPolicy.send
  name: send
  summary: Sends the PipelineRequest object to the next policy. Uses retry settings
    if necessary.
  signature: 'send(request: PipelineRequest[HttpRequest]) -> PipelineResponse[HttpRequest,
    HttpResponse]'
  parameters:
  - name: request
    description: The PipelineRequest object
    isRequired: true
    types:
    - <xref:<xref:corehttp.runtime.pipeline#corehttp.runtime.pipeline.PipelineRequest>>
  return:
    description: Returns the PipelineResponse or raises error if maximum retries exceeded.
    types:
    - <xref:corehttp.runtime.pipeline.PipelineResponse>
  exceptions:
  - type: corehttp.exceptions.BaseError if maximum retries exceeded.
  - type: corehttp.exceptions.ClientAuthenticationError if authentication
- uid: corehttp.runtime.policies.RetryPolicy.sleep
  name: sleep
  summary: 'Sleep between retry attempts.


    This method will respect a server''s `Retry-After` response header

    and sleep the duration of the time requested. If that is not present, it

    will use an exponential backoff. By default, the backoff factor is 0 and

    this method will return immediately.'
  signature: 'sleep(settings: Dict[str, Any], transport: HttpTransport[HttpRequest,
    HttpResponse], response: PipelineResponse[HttpRequest, HttpResponse] | None =
    None) -> None'
  parameters:
  - name: settings
    description: The retry settings.
    isRequired: true
    types:
    - <xref:dict>
  - name: transport
    description: The HTTP transport type.
    isRequired: true
    types:
    - <xref:<xref:corehttp.transport#corehttp.transport.HttpTransport>>
  - name: response
    description: The PipelineResponse object.
    defaultValue: None
    types:
    - <xref:<xref:corehttp.runtime.pipeline#corehttp.runtime.pipeline.PipelineResponse>>
